machine:
  services:
    - docker

dependencies:
  override:
    - docker build -t test-integration-nodejs:latest .

test:
  pre:
    - >
      docker run
      -e "CIRCLE_PROJECT_REPONAME=${CIRCLE_PROJECT_REPONAME}"
      -e "CIRCLE_BUILD_NUM=${CIRCLE_BUILD_NUM}"
      -e "IMAGE=${IMAGE:-coreos-beta}"
      -e "CHANNEL=${CHANNEL:-development}"
      -e "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}"
      -e "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}"
      --name=test-integration-nodejs-init test-integration-nodejs:latest /initialize.sh
    - docker commit test-integration-nodejs-init test-integration-nodejs:latest
  override:
    - docker run --name=test-integration-nodejs-hello-world test-integration-nodejs:latest /run_hello_world_test.sh
    - docker run --name=test-integration-nodejs-apt-packages test-integration-nodejs:latest /run_apt_packages_test.sh
    - docker run --name=test-integration-nodejs-lsusb test-integration-nodejs:latest /run_lsusb_test.sh
    - docker run --name=test-integration-nodejs-restart test-integration-nodejs:latest /run_restart_test.sh
  post:
    - docker run --name=DUMP-test-integration-nodejs test-integration-nodejs:latest vagrant ssh -- sudo journalctl
    - docker run --name=DESTROY-test-integration-nodejs test-integration-nodejs:latest vagrant destroy -f
    # TODO: Collect container as an asset?

